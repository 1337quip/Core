//Core 2.0 - Simple, yet powerful ScriptAPI base

var module = module || {}, command = command || {};
scriptName = module.name || command.name || "Module";
scriptAuthor = module.author || command.author || "Author";
scriptVersion = parseFloat(module.version) || parseFloat(command.version) || 1.0;

function Module() {
    this.getName = function () {return scriptName};
    this.getDescription = function () {return module.description || ""};
    this.getCategory = function () {return module.category || "Fun"};
    module.tag && (this.getTag = function () {return module.tag});
    module.values && (this.addValues = function (e) {for (i in module.values) e.add(module.values[i])});
    module.onEnable && (this.onEnable = function () {module.onEnable()});
    module.onDisable && (this.onDisable = function () {module.onDisable()});
    module.onUpdate && (this.onUpdate = function () {module.onUpdate()});
    module.onMotion && (this.onMotion = function (e) {module.onMotion(e)});
    module.onRender2D && (this.onRender2D = function (e) {module.onRender2D(e)});
    module.onRender3D && (this.onRender3D = function (e) {module.onRender3D(e)});
    module.onAttack && (this.onAttack = function (e) {module.onAttack(e)});
    module.onJump && (this.onJump = function (e) {module.onJump(e)});
    module.onPacket && (this.onPacket = function (e) {module.onPacket(e)});
    module.onKey && (this.onKey = function (e) {module.onKey(e)});
    module.onMove && (this.onMove = function (e) {module.onMove(e)});
    module.onStep && (this.onStep = function (e) {module.onStep(e)});
    module.onStepConfirm && (this.onStepConfirm = function () {module.onStepConfirm()});
    module.onWorld && (this.onWorld = function (e) {module.onWorld(e)});
    module.onSession && (this.onSession = function () {module.onSession()});
}

function Command() {
    this.getName = function () {return command.name || scriptName};
    this.getAliases = function () {return command.commands};
    this.execute = function (args) {
        prefix = Java.type("net.ccbluex.liquidbounce.LiquidBounce").commandManager.prefix;
        args[0] = args[0].replace(prefix, "");
        for (i in args) args[i] = args[i].toLowerCase();
        if (args[0] == this.getName()) {
            available = this.getAliases();
            chat.print("§8▏ §7Available commands§8: (§7" + available.length + "§8)");
            for (i in available) chat.print("§8▏ §6" + prefix + available[i]);
            chat.print("§8▏");
            chat.print("§8▏ §7§l" + this.getName() + " §8" + (command.version || scriptVersion).toFixed(1) + " §7by §8" + (command.author || scriptAuthor));
        } else command.onExecute(args);
    }
}

function onLoad() {
    Object.keys(module).length && (moduleManager.registerModule(new Module()), (module.onLoad && module.onLoad()));
    Object.keys(command).length && commandManager.registerCommand(new Command());
}

function onDisable() {
    Object.keys(module).length && ((module.onUnload && module.onUnload()), moduleManager.unregisterModule(new Module()));
    Object.keys(command).length && commandManager.unregisterCommand(new Command());
}

//Movement util

function isMovingHorizontally(entity) {
    return entity && entity != mc.thePlayer ? entity.lastTickPosX != entity.posX || entity.lastTickPosZ != entity.posZ : !!(mc.thePlayer.movementInput.moveForward || mc.thePlayer.movementInput.moveStrafe);
}

function isMovingVertically(entity) {
    return entity && entity != mc.thePlayer ? entity.lastTickPosY != entity.posY : mc.thePlayer.movementInput.jump;
}

function isMoving(entity) {
    return isMovingHorizontally(entity) || isMovingVertically(entity);
}

function isInputHorizontally() {
    return Keyboard.isKeyDown(mc.gameSettings.keyBindForward.getKeyCode()) || Keyboard.isKeyDown(mc.gameSettings.keyBindLeft.getKeyCode()) || Keyboard.isKeyDown(mc.gameSettings.keyBindBack.getKeyCode()) || Keyboard.isKeyDown(mc.gameSettings.keyBindRight.getKeyCode());
}

function isInputVertically() {
    return Keyboard.isKeyDown(mc.gameSettings.keyBindJump.getKeyCode());
}

function getMoveYaw() {
    moveYaw = mc.thePlayer.rotationYaw;
    if (mc.thePlayer.moveForward && !mc.thePlayer.moveStrafing) {
        moveYaw += mc.thePlayer.moveForward > 0 ? 0 : 180;
    } else if (mc.thePlayer.moveForward && mc.thePlayer.moveStrafing) {
        if (mc.thePlayer.moveForward > 0) moveYaw += mc.thePlayer.moveStrafing > 0 ? -45 : 45;
        else moveYaw += mc.thePlayer.moveStrafing > 0 ? 225 : 135;
    } else if (mc.thePlayer.moveStrafing && !mc.thePlayer.moveForward) moveYaw += mc.thePlayer.moveStrafing > 0 ? -90 : 90;
    return moveYaw;
}

function setSpeed(speed, strafe) {
    if (!isMoving()) return;
    if (mc.thePlayer.onGround || (strafe && !mc.thePlayer.onGround)) {
        yaw = getMoveYaw();
        mc.thePlayer.motionX = -Math.sin(Math.PI / 180 * yaw) * speed;
        mc.thePlayer.motionZ = Math.cos(Math.PI / 180 * yaw) * speed;
    }
}

Keyboard = Java.type("org.lwjgl.input.Keyboard");

//Timing util

function interval(ms, func) {
	return timer = new Timer("setInterval", true), timer.schedule(func, 0, ms), timer;
}

function delay(ms, func) {
	return timer = new Timer("setTimeout", true), timer.schedule(func, ms), timer;
}

Timer = Java.type("java.util.Timer");

//Packets

C00Handshake = Java.type("net.minecraft.network.handshake.client.C00Handshake");
C00PacketKeepAlive = Java.type("net.minecraft.network.play.client.C00PacketKeepAlive");
C00PacketLoginStart = Java.type("net.minecraft.network.login.client.C00PacketLoginStart");
C00PacketServerQuery = Java.type("net.minecraft.network.status.client.C00PacketServerQuery");
C01PacketChatMessage = Java.type("net.minecraft.network.play.client.C01PacketChatMessage");
C01PacketEncryptionResponse = Java.type("net.minecraft.network.login.client.C01PacketEncryptionResponse");
C01PacketPing = Java.type("net.minecraft.network.status.client.C01PacketPing");
C02PacketUseEntity = Java.type("net.minecraft.network.play.client.C02PacketUseEntity");
C03PacketPlayer = Java.type("net.minecraft.network.play.client.C03PacketPlayer");
C04PacketPlayerPosition = Java.type("net.minecraft.network.play.client.C03PacketPlayer.C04PacketPlayerPosition");
C05PacketPlayerLook = Java.type("net.minecraft.network.play.client.C03PacketPlayer.C05PacketPlayerLook");
C06PacketPlayerPosLook = Java.type("net.minecraft.network.play.client.C03PacketPlayer.C06PacketPlayerPosLook");
C07PacketPlayerDigging = Java.type("net.minecraft.network.play.client.C07PacketPlayerDigging");
C08PacketPlayerBlockPlacement = Java.type("net.minecraft.network.play.client.C08PacketPlayerBlockPlacement");
C09PacketHeldItemChange = Java.type("net.minecraft.network.play.client.C09PacketHeldItemChange");
C0APacketAnimation = Java.type("net.minecraft.network.play.client.C0APacketAnimation");
C0BPacketEntityAction = Java.type("net.minecraft.network.play.client.C0BPacketEntityAction");
C0CPacketInput = Java.type("net.minecraft.network.play.client.C0CPacketInput");
C0DPacketCloseWindow = Java.type("net.minecraft.network.play.client.C0DPacketCloseWindow");
C0EPacketClickWindow = Java.type("net.minecraft.network.play.client.C0EPacketClickWindow");
C0FPacketConfirmTransaction = Java.type("net.minecraft.network.play.client.C0FPacketConfirmTransaction");
C10PacketCreativeInventoryAction = Java.type("net.minecraft.network.play.client.C10PacketCreativeInventoryAction");
C11PacketEnchantItem = Java.type("net.minecraft.network.play.client.C11PacketEnchantItem");
C12PacketUpdateSign = Java.type("net.minecraft.network.play.client.C12PacketUpdateSign");
C13PacketPlayerAbilities = Java.type("net.minecraft.network.play.client.C13PacketPlayerAbilities");
C14PacketTabComplete = Java.type("net.minecraft.network.play.client.C14PacketTabComplete");
C15PacketClientSettings = Java.type("net.minecraft.network.play.client.C15PacketClientSettings");
C16PacketClientStatus = Java.type("net.minecraft.network.play.client.C16PacketClientStatus");
C17PacketCustomPayload = Java.type("net.minecraft.network.play.client.C17PacketCustomPayload");
C18PacketSpectate = Java.type("net.minecraft.network.play.client.C18PacketSpectate");
C19PacketResourcePackStatus = Java.type("net.minecraft.network.play.client.C19PacketResourcePackStatus");
S00PacketDisconnect = Java.type("net.minecraft.network.login.server.S00PacketDisconnect");
S00PacketKeepAlive = Java.type("net.minecraft.network.play.server.S00PacketKeepAlive");
S00PacketServerInfo = Java.type("net.minecraft.network.status.server.S00PacketServerInfo");
S01PacketEncryptionRequest = Java.type("net.minecraft.network.login.server.S01PacketEncryptionRequest");
S01PacketJoinGame = Java.type("net.minecraft.network.play.server.S01PacketJoinGame");
S01PacketPong = Java.type("net.minecraft.network.status.server.S01PacketPong");
S02PacketChat = Java.type("net.minecraft.network.play.server.S02PacketChat");
S02PacketLoginSuccess = Java.type("net.minecraft.network.login.server.S02PacketLoginSuccess");
S03PacketEnableCompression = Java.type("net.minecraft.network.login.server.S03PacketEnableCompression");
S03PacketTimeUpdate = Java.type("net.minecraft.network.play.server.S03PacketTimeUpdate");
S04PacketEntityEquipment = Java.type("net.minecraft.network.play.server.S04PacketEntityEquipment");
S05PacketSpawnPosition = Java.type("net.minecraft.network.play.server.S05PacketSpawnPosition");
S06PacketUpdateHealth = Java.type("net.minecraft.network.play.server.S06PacketUpdateHealth");
S07PacketRespawn = Java.type("net.minecraft.network.play.server.S07PacketRespawn");
S08PacketPlayerPosLook = Java.type("net.minecraft.network.play.server.S08PacketPlayerPosLook");
S09PacketHeldItemChange = Java.type("net.minecraft.network.play.server.S09PacketHeldItemChange");
S0APacketUseBed = Java.type("net.minecraft.network.play.server.S0APacketUseBed");
S0BPacketAnimation = Java.type("net.minecraft.network.play.server.S0BPacketAnimation");
S0CPacketSpawnPlayer = Java.type("net.minecraft.network.play.server.S0CPacketSpawnPlayer");
S0DPacketCollectItem = Java.type("net.minecraft.network.play.server.S0DPacketCollectItem");
S0EPacketSpawnObject = Java.type("net.minecraft.network.play.server.S0EPacketSpawnObject");
S0FPacketSpawnMob = Java.type("net.minecraft.network.play.server.S0FPacketSpawnMob");
S10PacketSpawnPainting = Java.type("net.minecraft.network.play.server.S10PacketSpawnPainting");
S11PacketSpawnExperienceOrb = Java.type("net.minecraft.network.play.server.S11PacketSpawnExperienceOrb");
S12PacketEntityVelocity = Java.type("net.minecraft.network.play.server.S12PacketEntityVelocity");
S13PacketDestroyEntities = Java.type("net.minecraft.network.play.server.S13PacketDestroyEntities");
S14PacketEntity = Java.type("net.minecraft.network.play.server.S14PacketEntity");
S15PacketEntityRelMove = Java.type("net.minecraft.network.play.server.S14PacketEntity.S15PacketEntityRelMove");
S16PacketEntityLook = Java.type("net.minecraft.network.play.server.S14PacketEntity.S16PacketEntityLook");
S17PacketEntityLookMove = Java.type("net.minecraft.network.play.server.S14PacketEntity.S17PacketEntityLookMove");
S18PacketEntityTeleport = Java.type("net.minecraft.network.play.server.S18PacketEntityTeleport");
S19PacketEntityHeadLook = Java.type("net.minecraft.network.play.server.S19PacketEntityHeadLook");
S19PacketEntityStatus = Java.type("net.minecraft.network.play.server.S19PacketEntityStatus");
S1BPacketEntityAttach = Java.type("net.minecraft.network.play.server.S1BPacketEntityAttach");
S1CPacketEntityMetadata = Java.type("net.minecraft.network.play.server.S1CPacketEntityMetadata");
S1DPacketEntityEffect = Java.type("net.minecraft.network.play.server.S1DPacketEntityEffect");
S1EPacketRemoveEntityEffect = Java.type("net.minecraft.network.play.server.S1EPacketRemoveEntityEffect");
S1FPacketSetExperience = Java.type("net.minecraft.network.play.server.S1FPacketSetExperience");
S20PacketEntityProperties = Java.type("net.minecraft.network.play.server.S20PacketEntityProperties");
S21PacketChunkData = Java.type("net.minecraft.network.play.server.S21PacketChunkData");
S22PacketMultiBlockChange = Java.type("net.minecraft.network.play.server.S22PacketMultiBlockChange");
S23PacketBlockChange = Java.type("net.minecraft.network.play.server.S23PacketBlockChange");
S24PacketBlockAction = Java.type("net.minecraft.network.play.server.S24PacketBlockAction");
S25PacketBlockBreakAnim = Java.type("net.minecraft.network.play.server.S25PacketBlockBreakAnim");
S26PacketMapChunkBulk = Java.type("net.minecraft.network.play.server.S26PacketMapChunkBulk");
S27PacketExplosion = Java.type("net.minecraft.network.play.server.S27PacketExplosion");
S28PacketEffect = Java.type("net.minecraft.network.play.server.S28PacketEffect");
S29PacketSoundEffect = Java.type("net.minecraft.network.play.server.S29PacketSoundEffect");
S2APacketParticles = Java.type("net.minecraft.network.play.server.S2APacketParticles");
S2BPacketChangeGameState = Java.type("net.minecraft.network.play.server.S2BPacketChangeGameState");
S2CPacketSpawnGlobalEntity = Java.type("net.minecraft.network.play.server.S2CPacketSpawnGlobalEntity");
S2DPacketOpenWindow = Java.type("net.minecraft.network.play.server.S2DPacketOpenWindow");
S2EPacketCloseWindow = Java.type("net.minecraft.network.play.server.S2EPacketCloseWindow");
S2FPacketSetSlot = Java.type("net.minecraft.network.play.server.S2FPacketSetSlot");
S30PacketWindowItems = Java.type("net.minecraft.network.play.server.S30PacketWindowItems");
S31PacketWindowProperty = Java.type("net.minecraft.network.play.server.S31PacketWindowProperty");
S32PacketConfirmTransaction = Java.type("net.minecraft.network.play.server.S32PacketConfirmTransaction");
S33PacketUpdateSign = Java.type("net.minecraft.network.play.server.S33PacketUpdateSign");
S34PacketMaps = Java.type("net.minecraft.network.play.server.S34PacketMaps");
S35PacketUpdateTileEntity = Java.type("net.minecraft.network.play.server.S35PacketUpdateTileEntity");
S36PacketSignEditorOpen = Java.type("net.minecraft.network.play.server.S36PacketSignEditorOpen");
S37PacketStatistics = Java.type("net.minecraft.network.play.server.S37PacketStatistics");
S38PacketPlayerListItem = Java.type("net.minecraft.network.play.server.S38PacketPlayerListItem");
S39PacketPlayerAbilities = Java.type("net.minecraft.network.play.server.S39PacketPlayerAbilities");
S3APacketTabComplete = Java.type("net.minecraft.network.play.server.S3APacketTabComplete");
S3BPacketScoreboardObjective = Java.type("net.minecraft.network.play.server.S3BPacketScoreboardObjective");
S3CPacketUpdateScore = Java.type("net.minecraft.network.play.server.S3CPacketUpdateScore");
S3DPacketDisplayScoreboard = Java.type("net.minecraft.network.play.server.S3DPacketDisplayScoreboard");
S3EPacketTeams = Java.type("net.minecraft.network.play.server.S3EPacketTeams");
S3FPacketCustomPayload = Java.type("net.minecraft.network.play.server.S3FPacketCustomPayload");
S40PacketDisconnect = Java.type("net.minecraft.network.play.server.S40PacketDisconnect");
S41PacketServerDifficulty = Java.type("net.minecraft.network.play.server.S41PacketServerDifficulty");
S42PacketCombatEvent = Java.type("net.minecraft.network.play.server.S42PacketCombatEvent");
S43PacketCamera = Java.type("net.minecraft.network.play.server.S43PacketCamera");
S44PacketWorldBorder = Java.type("net.minecraft.network.play.server.S44PacketWorldBorder");
S45PacketTitle = Java.type("net.minecraft.network.play.server.S45PacketTitle");
S46PacketSetCompressionLevel = Java.type("net.minecraft.network.play.server.S46PacketSetCompressionLevel");
S47PacketPlayerListHeaderFooter = Java.type("net.minecraft.network.play.server.S47PacketPlayerListHeaderFooter");
S48PacketResourcePackSend = Java.type("net.minecraft.network.play.server.S48PacketResourcePackSend");
S49PacketUpdateEntityNBT = Java.type("net.minecraft.network.play.server.S49PacketUpdateEntityNBT");
